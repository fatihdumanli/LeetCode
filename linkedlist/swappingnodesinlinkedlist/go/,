package main

import "fmt"

type ListNode struct {
    Val int
    Next *ListNode
}

func main() {
    head := &ListNode{Val: 1, Next: &ListNode{Val: 2, Next: &ListNode{Val: 3, Next: &ListNode{Val: 4, Next: &ListNode{Val: 5}}}}}
    r := swapNodes(head, 2)
    fmt.Println(r)
}

func swapNodes(head *ListNode, k int) *ListNode {

    // Get the length of the list
    var length = 0
    var ptr = head
    
    for ptr != nil {
        length++
        ptr = ptr.Next
    }

    ptr = head

    var prevNode *ListNode

    for i := 0; i < k - 2; i++ {
        prevNode = prevNode.Next
    }


    return nil
}
